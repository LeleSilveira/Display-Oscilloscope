#include <driver/dac.h>
#include "FastDAC.h"
int xres = 127; //16-1
int yres = 127; //16-1
byte xval[128][128];
byte yval[128][128];

byte imgData1[] PROGMEM = {//flower128
  0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xEF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFE, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xB7, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFB, 
  0xFD, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xDF, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFB, 0xEF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0x77, 0xFB, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xEF, 0xDF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEB, 0x7F, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFD, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF5, 0x7F, 0xBF, 
  0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xF7, 0xFD, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x7F, 0xDF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x77, 0xF7, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 
  0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xEF, 0xFF, 0x7F, 0xFF, 
  0xFF, 0xFF, 0xBE, 0xBF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xDF, 0xFF, 0x7B, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xBF, 
  0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFE, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFE, 0xF7, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xE6, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0x7F, 0xFA, 0xED, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xBB, 0xBE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x6F, 0xC0, 
  0xDF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x7F, 0xC0, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0xFF, 0x07, 0xFC, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x97, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 
  0xFF, 0x01, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xDF, 0xD5, 0xFF, 0xFF, 
  0xFF, 0xE3, 0x62, 0x00, 0xFB, 0x01, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFE, 0xFF, 0xFD, 0xFF, 0xFF, 0x00, 0x18, 0x00, 0xDE, 0x00, 0xF8, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFE, 0xFD, 0xFF, 0xFF, 0x00, 0x40, 0x00, 
  0xFC, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 
  0x7F, 0x00, 0x00, 0x00, 0x7C, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xF7, 0xFF, 0xDF, 0xFF, 0x7F, 0x00, 0x88, 0x00, 0x3C, 0x00, 0xFC, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xBD, 0x7F, 0x9E, 0xF7, 0xFF, 0x7F, 0x00, 0x20, 0x00, 
  0x3C, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xBD, 0xFF, 
  0xFF, 0x00, 0x80, 0x00, 0x1C, 0x00, 0x1E, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xBB, 0xF7, 0xFF, 0xFB, 0xF9, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x0F, 0xF0, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEB, 0xFF, 0xE1, 0x00, 0xC0, 0x00, 
  0x18, 0x00, 0x07, 0xF0, 0xFF, 0xFF, 0xFF, 0x7F, 0xBF, 0xDE, 0xFF, 0x7F, 
  0xC0, 0x00, 0x00, 0x00, 0x08, 0x80, 0x03, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xBB, 0xFF, 0x3F, 0x80, 0x01, 0x00, 0x00, 0x08, 0x80, 0x01, 0xE0, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x7F, 0x02, 0x01, 0x40, 0x00, 
  0x00, 0x80, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0x7F, 0x3F, 
  0x00, 0x02, 0x80, 0x00, 0x04, 0x40, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xBE, 0xEF, 0xEF, 0x7E, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xF8, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xBB, 0xEF, 0xFF, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFB, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFE, 0xFF, 0x00, 0x00, 0x00, 0x02, 
  0x00, 0x00, 0x80, 0x81, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 
  0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xEF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x02, 
  0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 
  0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
  0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x2F, 0xC0, 0x00, 0x00, 0x9C, 0x00, 0x02, 0x00, 0x00, 
  0xFF, 0xF7, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x80, 0x22, 
  0x01, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 
  0x00, 0x00, 0x08, 0xFE, 0xAB, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0xE0, 0x5E, 0x06, 0x02, 0x00, 0x00, 
  0xF0, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x50, 0x77, 
  0x3B, 0x00, 0x00, 0x00, 0xE0, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 
  0x00, 0x00, 0x68, 0xBF, 0x1F, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0xF8, 0xFE, 0x72, 0x01, 0x00, 0x00, 
  0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x58, 0xD7, 
  0x5D, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0x01, 
  0x00, 0x00, 0xE8, 0x3F, 0x7B, 0x24, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0xF8, 0xDA, 0xD4, 0x00, 0x00, 0x00, 
  0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0xDA, 0xBF, 
  0x5F, 0x8B, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 
  0x00, 0x00, 0x6C, 0xCD, 0xF3, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFA, 0xF7, 0xDC, 0x0A, 0x00, 0xE0, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0xB0, 0x7F, 
  0xBB, 0x08, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 
  0x00, 0x00, 0xEC, 0xC5, 0x66, 0x01, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x7F, 0xFF, 0x3F, 0x08, 0x00, 0x00, 0xFE, 0xBF, 0xF9, 0x03, 0x01, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x41, 0x00, 0x00, 0xF0, 0xEF, 
  0x5F, 0x48, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x08, 
  0x00, 0x00, 0x78, 0x56, 0x76, 0x80, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0xB0, 0xFF, 0x97, 0x23, 0x02, 0x00, 
  0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x11, 0x00, 0x00, 0x88, 0xEF, 
  0x2F, 0x04, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 
  0x00, 0x00, 0x40, 0xFB, 0x19, 0x00, 0xA0, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x80, 0x01, 0xED, 0x26, 0x00, 0x80, 0x03, 
  0xF8, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x10, 0x00, 0x00, 0x00, 0x04, 
  0x41, 0x00, 0x00, 0x0F, 0xF8, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0x07, 
  0x00, 0x00, 0x00, 0x84, 0x44, 0x01, 0x00, 0x1F, 0xFC, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x7F, 0x81, 0x41, 0x80, 0x10, 0x0A, 0x80, 0x00, 0xFC, 
  0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x04, 0x00, 0x08, 
  0x08, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x7F, 0x00, 0x00, 0x00, 0x02, 0x04, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x40, 0x10, 0x16, 0x02, 0x00, 0xF0, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x0C, 0x00, 0x01, 
  0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x1F, 0x05, 0x20, 0x00, 0x04, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x20, 0x28, 0x20, 0x40, 0x00, 0xC0, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0x03, 0x20, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x2F, 0x00, 0x10, 0x00, 0x48, 0x00, 0x00, 0xC0, 0xFF, 0x7F, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x02, 0x30, 0x00, 0x00, 0x00, 0x0C, 0xE0, 
  0xFF, 0xFE, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x28, 0x20, 
  0x98, 0x00, 0x38, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x3A, 0x00, 0x90, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x10, 0x02, 0x00, 0x00, 0xF8, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x36, 0x00, 
  0x10, 0x01, 0xF8, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 
  0xFF, 0x20, 0x58, 0x00, 0x10, 0x02, 0xE8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x89, 0x46, 0x00, 0x10, 0x00, 0xB8, 0xFF, 
  0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0x83, 0x6B, 0x00, 
  0x10, 0x03, 0xFC, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x9F, 0xD1, 0x00, 0x30, 0x04, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xE5, 0x01, 0x1C, 0x0E, 0x7C, 0xFE, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 
  0x1C, 0x0F, 0xFE, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFB, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x03, 0x1C, 0x1F, 0xDF, 0xFB, 0xBD, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x9E, 0xFF, 0xEF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFB, 0xDF, 0xDF, 0xFF, 0xFF, 0xFF, 0x03, 
  0xEF, 0xFF, 0xFF, 0xBE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0x77, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF
}; 
byte imgData[] PROGMEM = {//flor64
  0xFF, 0xFF, 0xDF, 0x7B, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 
  0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x7B, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFD, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFF, 0xFF, 0x07, 0x37, 0xFF, 0xFF, 0x7F, 
  0xE7, 0xFF, 0xFF, 0x07, 0x1F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x04, 
  0x0F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFD, 0x07, 0x00, 0x06, 0xFE, 0xFF, 0xFF, 
  0xEB, 0xFF, 0x07, 0x08, 0x06, 0xFE, 0xFF, 0xFF, 0xBF, 0xFB, 0x0F, 0x00, 
  0x02, 0xC2, 0xFF, 0xFF, 0xF7, 0xFF, 0x08, 0x00, 0x02, 0xC1, 0xFF, 0xFF, 
  0xDF, 0x7F, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0x57, 0x00, 0x00, 
  0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x90, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 
  0x00, 0x00, 0xFE, 0xFF, 0xF7, 0xFF, 0x03, 0x00, 0x00, 0x00, 0xFE, 0xFF, 
  0xFF, 0xFF, 0x07, 0x20, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x7F, 0x02, 0x00, 
  0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x0F, 0x00, 0x50, 0x10, 0x00, 0xFF, 0xFF, 
  0xFF, 0x07, 0x00, 0xE8, 0x03, 0x00, 0xF8, 0xFF, 0xFF, 0x07, 0x00, 0xB8, 
  0x06, 0x00, 0xF8, 0xFF, 0xFF, 0x07, 0x00, 0xDE, 0x0B, 0x00, 0xFC, 0xFF, 
  0xFF, 0x1F, 0x00, 0x5E, 0x55, 0x00, 0xFC, 0xFF, 0xFF, 0x0F, 0x00, 0xFA, 
  0x0E, 0x00, 0xFE, 0xFF, 0xFF, 0x07, 0x00, 0x7E, 0x07, 0x00, 0xFF, 0xFF, 
  0xFF, 0x4F, 0x00, 0xDC, 0x2D, 0x00, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0xF4, 
  0x83, 0x00, 0xFE, 0xFF, 0xFF, 0x0F, 0x00, 0xE8, 0x15, 0x00, 0xFE, 0xFF, 
  0xFF, 0x0F, 0x00, 0x50, 0x02, 0x10, 0xFC, 0xFF, 0xFF, 0x3F, 0x80, 0x00, 
  0x08, 0x60, 0xFE, 0xFF, 0xFF, 0xFF, 0x0F, 0x18, 0x01, 0xC0, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x07, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 
  0x02, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x04, 0x00, 0x80, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x1F, 0x04, 0x04, 0xC2, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x02, 
  0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x06, 0x10, 0xDC, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x9F, 0x09, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0x0C, 
  0x22, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x36, 0x7E, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x1F, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
}; 

byte imgData2[] PROGMEM = {//smile
  0xc0, 0x07, 0x30, 0x18, 0x08, 0x20, 0x04, 0x40, 0x44, 0x44, 0x02, 0x80,
             0x02, 0x80, 0x02, 0x80, 0x22, 0x88, 0x62, 0x8c, 0xc4, 0x47, 0x04, 0x40,
             0x08, 0x20, 0x30, 0x18, 0xc0, 0x07, 0x00, 0x00
}; 


void setup() {
  dac_output_enable(DAC_CHANNEL_1);
  dac_output_enable(DAC_CHANNEL_2);
  Serial.begin(115200);
 rtc_clk_cpu_freq_set(RTC_CPU_FREQ_240M);
  Serial.println("CPU Clockspeed: ");
  Serial.println(rtc_clk_cpu_freq_value(rtc_clk_cpu_freq_get()));
  displayOsci(imgData1, xres, yres);

}
//TESTAR RODAR FUNÇÃO E PREENCHER VETORES NO INICIO, LOOP WRITE VALORES
void displayOsci(byte * frame, int xres, int yres){
int i,j,k,z,yi=yres,stp=(int)((yres+1)/8.0),y2=stp*yres+1;
  for(k =y2; k >= 0; k-=stp){//yress=31
      z=k;
      for(j = 0;j <=xres ; j++){
        i=j;
        if(j>=8){
           i=j-8*(int)(j/8.0);
          z=k-(int)(j/8) ;
        }
        byte mask = 0x01 << i;
        byte answer = (frame[y2-z] & mask) >> i;
       // Serial.println(answer);
        if (answer != 0x01) {//!=0x01
          xval[j][yi]=(round((float)j * 255.0 / (float)xres));//dac_output_voltage(DAC_CHANNEL_1, round((float)j * 255.0 / (float)xres));
          yval[j][yi]=(round((float)yi * 255.0 / (float)yres));//dac_output_voltage(DAC_CHANNEL_2, round((float)yi * 255.0 / (float)yres));
           /*Serial.print("j:");
           Serial.println(j);
           Serial.print("yi:");
           Serial.println(yi);*/
         // delayMicroseconds(100);
        }
        else{
          xval[j][yi]=-1;
        }
      }
    yi=yi-1;
  }
}



void loop() {
   DACPrepare(true);
  int i,j;
  for(i =yres; i >= 0; i--){
      for(j = 0;j <=xres ; j++){
        if((xval[j][i]!=-1)){
          DAC1Write(xval[j][i]);//dac_output_voltage(DAC_CHANNEL_1, xval[j][i]);
          DAC2Write(yval[j][i]);//dac_output_voltage(DAC_CHANNEL_2, yval[j][i]);
           /*Serial.print("x:");
           Serial.println(xval[j][i]);
           Serial.print("y:");
           Serial.println(yval[j][i]);*/
          delayMicroseconds(10);
        }
        
      }
  }
   DACUnprepare(true);
}
